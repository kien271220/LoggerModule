#ifndef FILE_LOGGER_H
#define FILE_LOGGER_H
#define _CRT_SECURE_NO_WARNINGS
/////////////////////////////////////////////////
// INCLUDE

#include "Logger.h"
/////////////////////////////////////////////////
// PREPROCESSOR

/////////////////////////////////////////////////
// DEFINE

/////////////////////////////////////////////////
// MARCO
#define FILE_PATH_LEN_MAX                   (255)
/////////////////////////////////////////////////
// GLOBAL VARIABLES

/////////////////////////////////////////////////
// GLOBAL FUNCTIONS
static inline void localtime_safe(const time_t* timep, struct tm* result);
/////////////////////////////////////////////////
// TYPE DEF

/////////////////////////////////////////////////
// DATA TYPE (ENUM)

/////////////////////////////////////////////////
// DATA TYPE (STRUCT)

/////////////////////////////////////////////////
// STATIC DATA

/////////////////////////////////////////////////
// STATIC FUNCTIONS

/////////////////////////////////////////////////
// EXTERN

/////////////////////////////////////////////////
// CLASS DEFINITION
class FileLogger : public Logger
{
public:
    FileLogger();
    virtual ~FileLogger();
    int					init(log_config_t* config) override;
    int					log(char* text) override;
    void				deinit() override;
protected:
    char                log_Path[FILE_PATH_LEN_MAX];
};

#endif
